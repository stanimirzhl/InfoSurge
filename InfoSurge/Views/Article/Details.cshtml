@using InfoSurge.Models.Article
@{
    ViewData["Title"] = $"{Model.Article.Title}";
}
@model ArticleDetailsModel

@if (TempData["AddedComment"] != null)
{
    <div class="alert alert-success">
        <i class="bi bi-check2-circle"></i> @TempData["AddedComment"]
    </div>
}

<div class="container mt-4 mb-5">
    <div class="card border-0 shadow-sm rounded">
        <div class="position-relative">
            <img src="@Model.Article.MainImageUrl"
                 class="card-img-top img-fluid rounded-top"
                 alt="Основно изображение" />
            <div class="card-img-overlay d-flex flex-column justify-content-end p-0">
                <div class="bg-dark bg-opacity-75 text-white p-3 rounded-bottom">
                    <h1 class="card-title mb-1">@Model.Article.Title</h1>
                    <h5 class="card-text mb-0">@Model.Article.Introduction</h5>
                </div>
            </div>
        </div>

        <div class="card-body p-4">
            <p class="text-muted small mb-2">
                <i class="bi bi-calendar2-date me-1"></i> @Model.Article.PublishDate
                <span class="ms-3"><i class="bi bi-person"></i> @Model.Article.Author</span>
                <span class="ms-3"><i class="bi bi-chat-dots"></i> @Model.PagedComments.TotalCount</span>
            </p>

            <div class="d-flex align-items-center mb-3">
                @if (Model.Article.IsUserSignedIn)
                {
                    <form asp-action="LikeUnLike" asp-controller="React" method="post" class="me-3">
                        <input type="hidden" name="articleId" value="@Model.Article.Id" />

                        @if (Model.Article.UserReaction == true)
                        {
                            <button type="submit" name="isLike" value="true" class="btn btn-sm btn-outline-success me-1">
                                👍 @Model.Article.LikeDislikeCount.Item1
                            </button>

                            <button type="submit" name="isLike" value="false" class="btn btn-sm btn-outline-danger">
                                👎 @Model.Article.LikeDislikeCount.Item2
                            </button>
                        }

                        @if (Model.Article.UserReaction == false)
                        {
                            <button type="submit" name="isLike" value="true" class="btn btn-sm btn-outline-success me-1" >
                                👍 @Model.Article.LikeDislikeCount.Item1
                            </button>

                            <button type="submit" name="isLike" value="false" class="btn btn-sm btn-outline-danger" >
                                👎 @Model.Article.LikeDislikeCount.Item2
                            </button>
                        }

                        @if(Model.Article.UserReaction == null)
                        {
                            <button type="submit" name="isLike" value="true" class="btn btn-sm btn-outline-success me-1" @(Model.Article.UserReaction == true ? "disabled" : "")>
                                👍 @Model.Article.LikeDislikeCount.Item1
                            </button>

                            <button type="submit" name="isLike" value="false" class="btn btn-sm btn-outline-danger" @(Model.Article.UserReaction == false ? "disabled" : "")>
                                👎 @Model.Article.LikeDislikeCount.Item2
                            </button>   
                        }
                    </form>
                }
                else
                {
                    <a href="@Url.Action("Login", "Account", new { ReturnUrl = Url.Action("Details","Article", new { id = Model.Article.Id }) })" class="btn btn-sm btn-outline-success me-1">
                        👍 @Model.Article.LikeDislikeCount.Item1
                    </a>
                    <a href="@Url.Action("Login", "Account", new { ReturnUrl = Url.Action("Details","Article", new { id = Model.Article.Id }) })" class="btn btn-sm btn-outline-danger">
                        👎 @Model.Article.LikeDislikeCount.Item2
                    </a>
                }

                <div class="ms-auto">
                    @if (!Model.Article.IsUserSignedIn)
                    {
                        <a href="@Url.Action("Login", "Account", new { ReturnUrl = Url.Action("Details","Article", new { id = Model.Article.Id }) })" class="btn btn-sm btn-outline-secondary">
                            <i class="bi bi-bookmark"></i>
                        </a>
                    }
                    else if (Model.Article.UserHasSavedArticle)
                    {
                        <form asp-action="SaveArticle" asp-controller="SavedArticle" method="post">
                            <input type="hidden" name="articleId" value="@Model.Article.Id" />
                            <button type="submit" class="btn btn-sm btn-secondary">
                                <i class="bi bi-bookmark-fill"></i>
                            </button>
                        </form>
                    }
                    else
                    {
                        <form asp-action="SaveArticle" asp-controller="SavedArticle" method="post">
                            <input type="hidden" name="articleId" value="@Model.Article.Id" />
                            <button type="submit" class="btn btn-sm btn-outline-secondary">
                                <i class="bi bi-bookmark"></i>
                            </button>
                        </form>
                    }
                </div>
            </div>

            <div class="article-content mb-4">
                @Model.Article.Content
            </div>

            <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#commentSection">
                Покажи коментари
            </button>

            <div class="modal fade" id="commentSection" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-scrollable modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Коментари</h5>
                            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Затвори"></button>
                        </div>
                        <div class="modal-body">
                            @await Html.PartialAsync("_CommentsList", Model.PagedComments)
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Затвори</button>
                            <button type="button" class="btn btn-primary" onclick="switchToSecondModal()">Добави коментар</button>
                        </div>
                    </div>
                </div>
            </div>

            <div class="modal fade" id="addNewComment" tabindex="-1" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered modal-lg">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title">Добави коментар</h5>
                        </div>
                        <div class="modal-body">
                            @if (!Model.Article.IsUserSignedIn)
                            {
                                <a href="@Url.Action("Login","Account", new { ReturnUrl = Url.Action("Details","Article", new { id = Model.Article.Id }) })" class="btn btn-primary">
                                    Влезте в профила си, за да добавите коментар
                                </a>
                            }
                            else
                            {
                                @await Html.PartialAsync("_AddCommentForm", Model.Comment)
                            }
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" onclick="switchToFirstModal()">Назад</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="border rounded p-2">
        @if (Model.Article.AdditionalImages.Any())
        {
            <div class="mt-4 pb-2">
                <div class="d-flex overflow-auto gap-3">
                    @for (int i = 0; i < Model.Article.AdditionalImages.Count; i++)
                    {
                        string img = Model.Article.AdditionalImages[i];
                        <img src="@img"
                             class="rounded shadow-sm"
                             style="height: 200px; object-fit: cover; cursor: pointer;"
                             data-bs-toggle="modal"
                             data-bs-target="#imageModal{@i}" />
                    }
                </div>

                @for (int i = 0; i < Model.Article.AdditionalImages.Count; i++)
                {
                    string img = Model.Article.AdditionalImages[i];
                    <div class="modal fade" id="imageModal{@i}" tabindex="-1" aria-hidden="true">
                        <div class="modal-dialog modal-dialog-centered modal-lg">
                            <div class="modal-content bg-transparent border-0">
                                <div class="modal-body text-center p-0">
                                    <img src="@img" class="img-fluid rounded" />
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script src="https://cdn.jsdelivr.net/npm/autosize@4.0.2/dist/autosize.min.js"></script>
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            autosize(document.querySelectorAll("textarea"));
        });
    </script>

    <script>
        const firstModalEl = document.getElementById('commentSection');
        const secondModalEl = document.getElementById('addNewComment');
        const firstModal = new bootstrap.Modal(firstModalEl);
        const secondModal = new bootstrap.Modal(secondModalEl, {
            backdrop: 'static',
            keyboard: false
        });

        function switchToSecondModal() {
            firstModalEl.addEventListener('hidden.bs.modal', function handler() {
                secondModal.show();
                firstModalEl.removeEventListener('hidden.bs.modal', handler);
            });

            firstModal.hide();
        }

        function switchToFirstModal() {
            secondModalEl.addEventListener('hidden.bs.modal', function handler() {
                firstModal.show();
                secondModalEl.removeEventListener('hidden.bs.modal', handler);
            });

            secondModal.hide();
        }
    </script>
}